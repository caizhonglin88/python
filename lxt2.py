# 打印九九乘法表。
# 打印九九乘法表for i in rangenge(1,10): #从1开始，一直循环到9
#     for j in range(1,i+1):  #从1开始，每次循环到i，如i为1，则循环从1开始只能取一
#         print('%d*%d=%d ' %(j,i,i*j),end='')#次处print打印的是每次j循环结束不要换行end=''表示不换行
#     print()  #此处打印的是每次i循环开始换行，


# 有1、2、3、4个数字，能组成多少个互不相同且无重复数字的三位数？都是多少？





# 编写输入任意一张银行卡号，输出银行卡号的前6位和后4位，剩下的所有数字用星号（*）表示
# 	如：card("5189301239921331") -> 518930******1331

# 1. 有这样一种数如：12321（第一个等于最后一个，第二个等于倒数第二个，以此类推，直到中间仅剩一个数），
# 写一个函数，传入一个整数，判断这个数是不是这种前后一样的数。
# 2.有这样一个矩阵，设计一个函数，根据我输入的参数，返回其所在的位置是几行几列
# [[3,8 ,9],[6,11,2],[7,18,5]]
# 3.实现登录，账号名为admin，密码123，则提示“登录成功”，如果账号或者密码错误，
# name='admin'
# nub=123
# yh=input('请输入用户名:')
# mm=input('请输入密码:')
# if yh==name:




# 则提示“账号名或密码错误”并允许重新输入用户名和密码，如果3次登录失败，则提示“登录失败”并退出程序。

# 一个自然数与3的和是5的倍数,与3的差是6的倍数,这个自然数最小是几?

# 有这样一个list["a","b","c",1,2,3]，生成一个字典，将字符作为字典的key，数字作为字典的value。结果{'a': 1, 'b': 2, 'c': 3}

# 下面是一个3*3的矩阵
# 3，8，9
# 6，11，2
# 7，18，5
# 实际上是一个二维列表
# [[3，8，9], [6，11，2], [7，18，5]]
# 通过键盘输入需要构造的矩阵维度，比如3*3, 2*2，并根据维度接收对应数量的数，构成矩阵(二维列表)
# def a(nub):
#     lst=[]
#     for i in range(nub):
#         lst1=[]
#         for j in range(nub):
#             data=int(input("总共输入%d个数，当前是第%d行，第%d列:" % (nub**2,i+1,j+1)))
#             lst1.append(data)
#         lst.append(lst1)
#     return lst
#
# print(a(3))



# 1. 格式化字符串：
# name='张三'
# age=30
# like='走路'
# 通过格式化字符串得到结果： 张三今年30，爱好是走路。

# 4. 字典练习
dic={'k1':"v1","k2":"v2","k3":[11,22,33]}
dic1={'k4':'12','k5':'32'}

# a. 输出所有的 key ---
print(list(dic.keys()))#以列表返回所有的key，结果为['k1', 'k2', 'k3']
#查找键是否在字典中，如果在返回真true。否则返回假false
print('k1' in dic)#返回结果为True
#b. 输出所有的 value--
print(list(dic.values()))#返回结果为['v1', 'v2', [11, 22, 33]]
# c. 输出所有的 key 和 value---
print(list(dic.items())) #返回结果为[('k1', 'v1'), ('k2', 'v2'), ('k3', [11, 22, 33])]
# d. 请在字典中添加一个键值对， "k4":"v4"，输出添加后的字典----
(dic.setdefault("k4","v4"))
print(dic)  #返回结果为：{'k1': 'v1', 'k2': 'v2', 'k3': [11, 22, 33], 'k4': 'v4'}
#把字典dic1所有的键值添加到dic字典里面
dic.update(dic1)
print(dic) #返回结果为{'k1': 'v1', 'k2': 'v2', 'k3': [11, 22, 33], 'k4': '12', 'k5': '32'}

# e. 请在修改字典中 "k1" 对应的值为 "alex"，输出修改后的字典----
dic['k1']='alex'
print(dic)  #打印结果为{'k1': 'alex', 'k2': 'v2', 'k3': [11, 22, 33]}
# f. 请在 k3 对应的值中追加一个元素 44，输出修改后的字典--
dic["k3"].append(44)
print(dic) #返回结果为{'k1': 'v1', 'k2': 'v2', 'k3': [11, 22, 33, 44]}
#g. 请在 k3 对应的值的第 1 个位置插入个元素 18，输出修改后的字典----
dic["k3"].insert(0,"18")
print(dic) #注释：先取出k3的值，在对取出的值做操作，取出的值是一个列表，根据列表的操作可以指定索引
#添加值的方法用insert，返回结果为{'k1': 'v1', 'k2': 'v2', 'k3': ['18', 11, 22, 33]}

# 一些四位数,百位数字都是3,十位数字都是6,并且它们既能被2整除,又能被 3整除,求这样的四位数中最大的和最小的两数各是几?